%{
This model is generated by:
- Loading terrain map
- Creating threats as cylinders
- Creating start and finish points
- Setting ranges and limits
%}

function model=CreateModel()

H = imread('ChrismasTerrain.tif'); % Get elevation data
H (H < 0) = 0;
MAPSIZE_X = size(H,2); % x index: columns of H
MAPSIZE_Y = size(H,1); % y index: rows of H
[X,Y] = meshgrid(1:MAPSIZE_X,1:MAPSIZE_Y); % Create all (x,y) points to plot

R1=100;  % Radius
x1 = 300; y1 = 200; z1 = 150; Hc1 = 250; % center

R2=150;  % Radius
x2 = 500; y2 = 150; z2 = 150;Hc2 = 250; % center

R3=100;  % Radius
x3 = 650; y3 = 550; z3 = 150;Hc3 = 100; % center

R4=80;  % Radius
x4 = 80; y4 = 180; z4 = 150;Hc4 = 100; % center

R5=179;  % Radius
x5 = 500; y5 = 700; z5 = 150;Hc5 = 500;% center

R6=70;  % Radius
x6 = 700; y6 = 800; z6 = 150;Hc6 = 100;% center

R7=120;  % Radius
x7 = 920; y7 = 680; z7 = 150;Hc7 = 100; % center

R8=110;  % Radius
x8 = 500; y8 = 360; z8 = 150;Hc8 = 500; % center


  
    % Map limits
    xmin= 1;
    xmax= MAPSIZE_X;
    
    ymin= 1;
    ymax= MAPSIZE_Y;
    
    zmin = 100;
    zmax = 200;  

 
    % Start and end position
   start_location = [200;100;150];
    end_location = [800;800;150];
    
    % Number of path nodes (not including the start position (start node))
    n=10;
    
    % Incorporate map and searching parameters to a model
    model.start=start_location;
    model.end=end_location;
    model.n=n;
    model.xmin=xmin;
    model.xmax=xmax;
    model.zmin=zmin;
    model.ymin=ymin;
    model.ymax=ymax;
    model.zmax=zmax;
    model.MAPSIZE_X = MAPSIZE_X;
    model.MAPSIZE_Y = MAPSIZE_Y;
    model.X = X;
    model.Y = Y;
    model.H = H;
    %model.threats = [x1 y1 z1 R1 Hc1;x2 y2 z2 R2 Hc2; x3 y3 z3 R3 Hc3; x4 y4 z4 R4 Hc4; x5 y5 z5 R5 Hc5;x6 y6 z6 R6 Hc6;x7 y7 z7 R7 Hc7;x8 y8 z8 R8 Hc8];
    model.threats = [x1 y1 z1 R1 Hc1;x2 y2 z2 R2 Hc2; x3 y3 z3 R3 Hc3; x4 y4 z4 R4 Hc4; x5 y5 z5 R5 Hc5;x6 y6 z6 R6 Hc6;x7 y7 z7 R7 Hc7;x8 y8 z8 R8 Hc8];
    PlotModel(model);
    minHeight = min(H(:));
maxHeight = max(H(:));
disp(['Actual Minimum Height: ' num2str(minHeight)]);
disp(['Actual Maximum Height: ' num2str(maxHeight)]);

end
